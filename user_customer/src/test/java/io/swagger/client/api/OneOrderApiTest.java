/*
 * BeezUP API
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BeezUPCommonErrorResponseMessage;
import io.swagger.client.model.ChangeOrderRequest;
import io.swagger.client.model.ChangeOrderResponse;
import io.swagger.client.model.Order;
import io.swagger.client.model.OrderHistory;
import io.swagger.client.model.SetMerchantOrderInfoRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OneOrderApi
 */
@Ignore
public class OneOrderApiTest {

    private final OneOrderApi api = new OneOrderApi();

    
    /**
     * Change order status
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeOrderTest() throws ApiException {
        String marketplaceTechnicalCode = null;
        Integer accountId = null;
        String beezUPOrderId = null;
        String changeOrderType = null;
        String userName = null;
        ChangeOrderRequest request = null;
        Boolean testMode = null;
        ChangeOrderResponse response = api.changeOrder(marketplaceTechnicalCode, accountId, beezUPOrderId, changeOrderType, userName, request, testMode);

        // TODO: test validations
    }
    
    /**
     * Clear the merchant info related to this order
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clearMerchantOrderInfoTest() throws ApiException {
        String marketplaceTechnicalCode = null;
        Integer accountId = null;
        String beezUPOrderId = null;
        api.clearMerchantOrderInfo(marketplaceTechnicalCode, accountId, beezUPOrderId);

        // TODO: test validations
    }
    
    /**
     * Get order details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderTest() throws ApiException {
        String marketplaceTechnicalCode = null;
        Integer accountId = null;
        String beezUPOrderId = null;
        Order response = api.getOrder(marketplaceTechnicalCode, accountId, beezUPOrderId);

        // TODO: test validations
    }
    
    /**
     * Get the harvest history and the change status operations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderHistoryTest() throws ApiException {
        String marketplaceTechnicalCode = null;
        Integer accountId = null;
        String beezUPOrderId = null;
        OrderHistory response = api.getOrderHistory(marketplaceTechnicalCode, accountId, beezUPOrderId);

        // TODO: test validations
    }
    
    /**
     * Harvest a specific order from the marketplace
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void harvestOrderTest() throws ApiException {
        String marketplaceTechnicalCode = null;
        Integer accountId = null;
        String beezUPOrderId = null;
        api.harvestOrder(marketplaceTechnicalCode, accountId, beezUPOrderId);

        // TODO: test validations
    }
    
    /**
     * Associate your merchant order identifier to this order
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setMerchantOrderInfoTest() throws ApiException {
        String marketplaceTechnicalCode = null;
        Integer accountId = null;
        String beezUPOrderId = null;
        SetMerchantOrderInfoRequest request = null;
        api.setMerchantOrderInfo(marketplaceTechnicalCode, accountId, beezUPOrderId, request);

        // TODO: test validations
    }
    
}
