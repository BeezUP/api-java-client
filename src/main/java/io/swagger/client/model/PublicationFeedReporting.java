/*
 * BeezUP API
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/beezUP/API) 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FeedType;
import org.joda.time.DateTime;

/**
 * Publication feed reporting
 */
@ApiModel(description = "Publication feed reporting")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-15T14:10:42.368Z")
public class PublicationFeedReporting {
  @SerializedName("feedType")
  private FeedType feedType = null;

  @SerializedName("startUtcDate")
  private DateTime startUtcDate = null;

  @SerializedName("endUtcDate")
  private DateTime endUtcDate = null;

  @SerializedName("processingStatus")
  private String processingStatus = null;

  @SerializedName("exportedProducts")
  private Integer exportedProducts = null;

  @SerializedName("transmittedItems")
  private Integer transmittedItems = null;

  @SerializedName("publishedItems")
  private Integer publishedItems = null;

  @SerializedName("publishedItemsWithWarning")
  private Integer publishedItemsWithWarning = null;

  @SerializedName("failedItems")
  private Integer failedItems = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  @SerializedName("htmlReportUrl")
  private String htmlReportUrl = null;

  @SerializedName("htmlReportGenerationErrorMessage")
  private String htmlReportGenerationErrorMessage = null;

  @SerializedName("completed")
  private Boolean completed = null;

  public PublicationFeedReporting feedType(FeedType feedType) {
    this.feedType = feedType;
    return this;
  }

   /**
   * Get feedType
   * @return feedType
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public FeedType getFeedType() {
    return feedType;
  }

  public void setFeedType(FeedType feedType) {
    this.feedType = feedType;
  }

  public PublicationFeedReporting startUtcDate(DateTime startUtcDate) {
    this.startUtcDate = startUtcDate;
    return this;
  }

   /**
   * The feed publication start time (UTC timezone)
   * @return startUtcDate
  **/
  @ApiModelProperty(example = "2016-02-13T12:01:11Z", required = true, value = "The feed publication start time (UTC timezone)")
  public DateTime getStartUtcDate() {
    return startUtcDate;
  }

  public void setStartUtcDate(DateTime startUtcDate) {
    this.startUtcDate = startUtcDate;
  }

  public PublicationFeedReporting endUtcDate(DateTime endUtcDate) {
    this.endUtcDate = endUtcDate;
    return this;
  }

   /**
   * The feed publication end time (UTC timezone)
   * @return endUtcDate
  **/
  @ApiModelProperty(example = "2016-02-13T12:02:00Z", value = "The feed publication end time (UTC timezone)")
  public DateTime getEndUtcDate() {
    return endUtcDate;
  }

  public void setEndUtcDate(DateTime endUtcDate) {
    this.endUtcDate = endUtcDate;
  }

  public PublicationFeedReporting processingStatus(String processingStatus) {
    this.processingStatus = processingStatus;
    return this;
  }

   /**
   * The processing status
   * @return processingStatus
  **/
  @ApiModelProperty(example = "Done", required = true, value = "The processing status")
  public String getProcessingStatus() {
    return processingStatus;
  }

  public void setProcessingStatus(String processingStatus) {
    this.processingStatus = processingStatus;
  }

  public PublicationFeedReporting exportedProducts(Integer exportedProducts) {
    this.exportedProducts = exportedProducts;
    return this;
  }

   /**
   * The product count downloaded from BeezUP Export
   * @return exportedProducts
  **/
  @ApiModelProperty(example = "10142", value = "The product count downloaded from BeezUP Export")
  public Integer getExportedProducts() {
    return exportedProducts;
  }

  public void setExportedProducts(Integer exportedProducts) {
    this.exportedProducts = exportedProducts;
  }

  public PublicationFeedReporting transmittedItems(Integer transmittedItems) {
    this.transmittedItems = transmittedItems;
    return this;
  }

   /**
   * The item count (products or offers) sent to the marketplace
   * @return transmittedItems
  **/
  @ApiModelProperty(example = "10042", value = "The item count (products or offers) sent to the marketplace")
  public Integer getTransmittedItems() {
    return transmittedItems;
  }

  public void setTransmittedItems(Integer transmittedItems) {
    this.transmittedItems = transmittedItems;
  }

  public PublicationFeedReporting publishedItems(Integer publishedItems) {
    this.publishedItems = publishedItems;
    return this;
  }

   /**
   * The item count (products or offers) the marketplace flagged as successful
   * @return publishedItems
  **/
  @ApiModelProperty(example = "10041", value = "The item count (products or offers) the marketplace flagged as successful")
  public Integer getPublishedItems() {
    return publishedItems;
  }

  public void setPublishedItems(Integer publishedItems) {
    this.publishedItems = publishedItems;
  }

  public PublicationFeedReporting publishedItemsWithWarning(Integer publishedItemsWithWarning) {
    this.publishedItemsWithWarning = publishedItemsWithWarning;
    return this;
  }

   /**
   * The item count (products or offers) the marketplace flagged as successful with warnings
   * @return publishedItemsWithWarning
  **/
  @ApiModelProperty(example = "123", value = "The item count (products or offers) the marketplace flagged as successful with warnings")
  public Integer getPublishedItemsWithWarning() {
    return publishedItemsWithWarning;
  }

  public void setPublishedItemsWithWarning(Integer publishedItemsWithWarning) {
    this.publishedItemsWithWarning = publishedItemsWithWarning;
  }

  public PublicationFeedReporting failedItems(Integer failedItems) {
    this.failedItems = failedItems;
    return this;
  }

   /**
   * The item count (products or offers) the marketplace flagged as failed
   * @return failedItems
  **/
  @ApiModelProperty(example = "1", value = "The item count (products or offers) the marketplace flagged as failed")
  public Integer getFailedItems() {
    return failedItems;
  }

  public void setFailedItems(Integer failedItems) {
    this.failedItems = failedItems;
  }

  public PublicationFeedReporting errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * The error message
   * @return errorMessage
  **/
  @ApiModelProperty(example = "", value = "The error message")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public PublicationFeedReporting htmlReportUrl(String htmlReportUrl) {
    this.htmlReportUrl = htmlReportUrl;
    return this;
  }

   /**
   * The Url for the Html Report generated
   * @return htmlReportUrl
  **/
  @ApiModelProperty(example = "http://www.myreporthtml.com", value = "The Url for the Html Report generated")
  public String getHtmlReportUrl() {
    return htmlReportUrl;
  }

  public void setHtmlReportUrl(String htmlReportUrl) {
    this.htmlReportUrl = htmlReportUrl;
  }

  public PublicationFeedReporting htmlReportGenerationErrorMessage(String htmlReportGenerationErrorMessage) {
    this.htmlReportGenerationErrorMessage = htmlReportGenerationErrorMessage;
    return this;
  }

   /**
   * The error message if the Html Report generation failed
   * @return htmlReportGenerationErrorMessage
  **/
  @ApiModelProperty(example = "Example error message", value = "The error message if the Html Report generation failed")
  public String getHtmlReportGenerationErrorMessage() {
    return htmlReportGenerationErrorMessage;
  }

  public void setHtmlReportGenerationErrorMessage(String htmlReportGenerationErrorMessage) {
    this.htmlReportGenerationErrorMessage = htmlReportGenerationErrorMessage;
  }

  public PublicationFeedReporting completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Indicates if the publication is completed or not
   * @return completed
  **/
  @ApiModelProperty(example = "true", value = "Indicates if the publication is completed or not")
  public Boolean getCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicationFeedReporting publicationFeedReporting = (PublicationFeedReporting) o;
    return Objects.equals(this.feedType, publicationFeedReporting.feedType) &&
        Objects.equals(this.startUtcDate, publicationFeedReporting.startUtcDate) &&
        Objects.equals(this.endUtcDate, publicationFeedReporting.endUtcDate) &&
        Objects.equals(this.processingStatus, publicationFeedReporting.processingStatus) &&
        Objects.equals(this.exportedProducts, publicationFeedReporting.exportedProducts) &&
        Objects.equals(this.transmittedItems, publicationFeedReporting.transmittedItems) &&
        Objects.equals(this.publishedItems, publicationFeedReporting.publishedItems) &&
        Objects.equals(this.publishedItemsWithWarning, publicationFeedReporting.publishedItemsWithWarning) &&
        Objects.equals(this.failedItems, publicationFeedReporting.failedItems) &&
        Objects.equals(this.errorMessage, publicationFeedReporting.errorMessage) &&
        Objects.equals(this.htmlReportUrl, publicationFeedReporting.htmlReportUrl) &&
        Objects.equals(this.htmlReportGenerationErrorMessage, publicationFeedReporting.htmlReportGenerationErrorMessage) &&
        Objects.equals(this.completed, publicationFeedReporting.completed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedType, startUtcDate, endUtcDate, processingStatus, exportedProducts, transmittedItems, publishedItems, publishedItemsWithWarning, failedItems, errorMessage, htmlReportUrl, htmlReportGenerationErrorMessage, completed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicationFeedReporting {\n");
    
    sb.append("    feedType: ").append(toIndentedString(feedType)).append("\n");
    sb.append("    startUtcDate: ").append(toIndentedString(startUtcDate)).append("\n");
    sb.append("    endUtcDate: ").append(toIndentedString(endUtcDate)).append("\n");
    sb.append("    processingStatus: ").append(toIndentedString(processingStatus)).append("\n");
    sb.append("    exportedProducts: ").append(toIndentedString(exportedProducts)).append("\n");
    sb.append("    transmittedItems: ").append(toIndentedString(transmittedItems)).append("\n");
    sb.append("    publishedItems: ").append(toIndentedString(publishedItems)).append("\n");
    sb.append("    publishedItemsWithWarning: ").append(toIndentedString(publishedItemsWithWarning)).append("\n");
    sb.append("    failedItems: ").append(toIndentedString(failedItems)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    htmlReportUrl: ").append(toIndentedString(htmlReportUrl)).append("\n");
    sb.append("    htmlReportGenerationErrorMessage: ").append(toIndentedString(htmlReportGenerationErrorMessage)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

