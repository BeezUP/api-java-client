/*
 * BeezUP API
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/beezUP/API) 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BeezUPCommonChannelColumnId;
import io.swagger.client.model.ExclusionFilterName;
import io.swagger.client.model.ExclusionFilterOperatorName;

/**
 * The exclusion filter
 */
@ApiModel(description = "The exclusion filter")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-15T14:10:42.368Z")
public class ExclusionFilter {
  @SerializedName("name")
  private ExclusionFilterName name = null;

  @SerializedName("position")
  private Integer position = null;

  @SerializedName("groupId")
  private String groupId = null;

  @SerializedName("positionInGroup")
  private Integer positionInGroup = null;

  @SerializedName("channelColumnId")
  private BeezUPCommonChannelColumnId channelColumnId = null;

  @SerializedName("operatorName")
  private ExclusionFilterOperatorName operatorName = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  public ExclusionFilter name(ExclusionFilterName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public ExclusionFilterName getName() {
    return name;
  }

  public void setName(ExclusionFilterName name) {
    this.name = name;
  }

  public ExclusionFilter position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * The position of the exclusion filter
   * minimum: 1
   * @return position
  **/
  @ApiModelProperty(example = "1", required = true, value = "The position of the exclusion filter")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }

  public ExclusionFilter groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Indicate the filter's group. All filters in the same group means an \"AND\" operation in the filter group
   * @return groupId
  **/
  @ApiModelProperty(example = "d9833f4b-718a-436f-bab5-89da3d21bf60", required = true, value = "Indicate the filter's group. All filters in the same group means an \"AND\" operation in the filter group")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public ExclusionFilter positionInGroup(Integer positionInGroup) {
    this.positionInGroup = positionInGroup;
    return this;
  }

   /**
   * Indicate the filter group position. This information is used for the UI purpose and must be unique in the filter group.
   * minimum: 1
   * @return positionInGroup
  **/
  @ApiModelProperty(example = "1", required = true, value = "Indicate the filter group position. This information is used for the UI purpose and must be unique in the filter group.")
  public Integer getPositionInGroup() {
    return positionInGroup;
  }

  public void setPositionInGroup(Integer positionInGroup) {
    this.positionInGroup = positionInGroup;
  }

  public ExclusionFilter channelColumnId(BeezUPCommonChannelColumnId channelColumnId) {
    this.channelColumnId = channelColumnId;
    return this;
  }

   /**
   * Get channelColumnId
   * @return channelColumnId
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public BeezUPCommonChannelColumnId getChannelColumnId() {
    return channelColumnId;
  }

  public void setChannelColumnId(BeezUPCommonChannelColumnId channelColumnId) {
    this.channelColumnId = channelColumnId;
  }

  public ExclusionFilter operatorName(ExclusionFilterOperatorName operatorName) {
    this.operatorName = operatorName;
    return this;
  }

   /**
   * Get operatorName
   * @return operatorName
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public ExclusionFilterOperatorName getOperatorName() {
    return operatorName;
  }

  public void setOperatorName(ExclusionFilterOperatorName operatorName) {
    this.operatorName = operatorName;
  }

  public ExclusionFilter value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value indicate by the user when the filter operation requires it.
   * @return value
  **/
  @ApiModelProperty(example = "sony", value = "The value indicate by the user when the filter operation requires it.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ExclusionFilter enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * indicates if the filter is currently active.
   * @return enabled
  **/
  @ApiModelProperty(example = "true", required = true, value = "indicates if the filter is currently active.")
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExclusionFilter exclusionFilter = (ExclusionFilter) o;
    return Objects.equals(this.name, exclusionFilter.name) &&
        Objects.equals(this.position, exclusionFilter.position) &&
        Objects.equals(this.groupId, exclusionFilter.groupId) &&
        Objects.equals(this.positionInGroup, exclusionFilter.positionInGroup) &&
        Objects.equals(this.channelColumnId, exclusionFilter.channelColumnId) &&
        Objects.equals(this.operatorName, exclusionFilter.operatorName) &&
        Objects.equals(this.value, exclusionFilter.value) &&
        Objects.equals(this.enabled, exclusionFilter.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, position, groupId, positionInGroup, channelColumnId, operatorName, value, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExclusionFilter {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    positionInGroup: ").append(toIndentedString(positionInGroup)).append("\n");
    sb.append("    channelColumnId: ").append(toIndentedString(channelColumnId)).append("\n");
    sb.append("    operatorName: ").append(toIndentedString(operatorName)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

