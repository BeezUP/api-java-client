/*
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * ChannelInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-15T15:58:06.674Z")
public class ChannelInfo {
  @SerializedName("name")
  private String name = null;

  @SerializedName("homeUrl")
  private String homeUrl = null;

  @SerializedName("logoUrl")
  private String logoUrl = null;

  @SerializedName("types")
  private List<String> types = new ArrayList<String>();

  public ChannelInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The channel name
   * @return name
  **/
  @ApiModelProperty(example = "Amazon Direct FRA", required = true, value = "The channel name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChannelInfo homeUrl(String homeUrl) {
    this.homeUrl = homeUrl;
    return this;
  }

   /**
   * The channel home url
   * @return homeUrl
  **/
  @ApiModelProperty(example = "http://www.amazon.fr", required = true, value = "The channel home url")
  public String getHomeUrl() {
    return homeUrl;
  }

  public void setHomeUrl(String homeUrl) {
    this.homeUrl = homeUrl;
  }

  public ChannelInfo logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * The channel logo url
   * @return logoUrl
  **/
  @ApiModelProperty(example = "http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png", required = true, value = "The channel logo url")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public ChannelInfo types(List<String> types) {
    this.types = types;
    return this;
  }

  public ChannelInfo addTypesItem(String typesItem) {
    this.types.add(typesItem);
    return this;
  }

   /**
   * The type list related to a channel
   * @return types
  **/
  @ApiModelProperty(example = "[&quot;Marketplace&quot;]", required = true, value = "The type list related to a channel")
  public List<String> getTypes() {
    return types;
  }

  public void setTypes(List<String> types) {
    this.types = types;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelInfo channelInfo = (ChannelInfo) o;
    return Objects.equals(this.name, channelInfo.name) &&
        Objects.equals(this.homeUrl, channelInfo.homeUrl) &&
        Objects.equals(this.logoUrl, channelInfo.logoUrl) &&
        Objects.equals(this.types, channelInfo.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, homeUrl, logoUrl, types);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelInfo {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    homeUrl: ").append(toIndentedString(homeUrl)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

